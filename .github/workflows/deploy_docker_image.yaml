name: Deploy Docker Image

on:
  workflow_dispatch:
    inputs:
      image-tag:
        required: true
        type: string
      aws-address:
        type: string
        default: '541083330167.dkr.ecr.us-west-2.amazonaws.com'
      aws-repo-name:
        type: string
        default: 'tierkreis/runtime'
      github-image-name:
        type: string
        default: tierkreis

env:
  IMAGE_NAME: ${{ inputs.github-image-name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-west-2

      - name: Login to container registry
        run: |
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin ${{ inputs.aws-address }}

      - name: Build and push docker image
        run: |
          DOCKER_BUILDKIT=1 docker build . \
            -f ./tierkreis-server/Dockerfile \
            --build-arg GIT_SHA=${{ github.sha }} \
            -t ${{ inputs.aws-address }}/${{ inputs.aws-repo-name }}:${{ inputs.image-tag }}
          echo ${{ inputs.aws-address }}/${{ inputs.aws-repo-name }}:${{ inputs.image-tag }}
          docker push ${{ inputs.aws-address }}/${{ inputs.aws-repo-name }}:${{ inputs.image-tag }}

      - name: List deployed images
        run: aws ecr list-images --repository-name ${{ inputs.aws-repo-name }} --region us-west-2

      - name: Log in to GitHub container registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Build the Docker image
        run: docker tag ${{ inputs.aws-address }}/${{ inputs.aws-repo-name }}:${{ inputs.image-tag }} $IMAGE_NAME

      - name: Push the Docker image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo $IMAGE_ID
          docker tag $IMAGE_NAME $IMAGE_ID:${{ inputs.image-tag }}
          docker push $IMAGE_ID:${{ inputs.image-tag }}
