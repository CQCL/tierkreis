# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: graph.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import Dict, List

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


class Type(betterproto.Enum):
    TYPE_INT = 0
    TYPE_BOOL = 1
    TYPE_GRAPH = 2
    TYPE_PAIR = 3
    TYPE_ARRAY = 4
    TYPE_CIRCUIT = 5
    TYPE_VAR = 6


@dataclass(eq=False, repr=False)
class ValueMap(betterproto.Message):
    map: Dict[str, "Value"] = betterproto.map_field(
        1, betterproto.TYPE_STRING, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class PairValue(betterproto.Message):
    first: "Value" = betterproto.message_field(1)
    second: "Value" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArrayValue(betterproto.Message):
    array: List["Value"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ListValue(betterproto.Message):
    list: List["Value"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Value(betterproto.Message):
    graph: "Graph" = betterproto.message_field(1, group="value")
    integer: int = betterproto.int64_field(2, group="value")
    boolean: bool = betterproto.bool_field(3, group="value")
    pair: "PairValue" = betterproto.message_field(4, group="value")
    array: "ArrayValue" = betterproto.message_field(5, group="value")
    circuit: str = betterproto.string_field(6, group="value")


@dataclass(eq=False, repr=False)
class TypeData(betterproto.Message):
    type: "Type" = betterproto.enum_field(1)
    input_types: List["TypeDataWithPort"] = betterproto.message_field(2)
    output_types: List["TypeDataWithPort"] = betterproto.message_field(3)
    var_name: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class TypeDataWithPort(betterproto.Message):
    port: str = betterproto.string_field(1)
    type_data: "TypeData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class NodeWeight(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    op: str = betterproto.string_field(3)
    pre_args: "ValueMap" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class EdgeWeight(betterproto.Message):
    port_from: str = betterproto.string_field(1)
    port_to: str = betterproto.string_field(2)
    node_from: int = betterproto.uint64_field(3)
    node_to: int = betterproto.uint64_field(4)
    edge_type: "TypeData" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class Graph(betterproto.Message):
    nodes: List["NodeWeight"] = betterproto.message_field(1)
    edges: List["EdgeWeight"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RunRequest(betterproto.Message):
    graph: "Graph" = betterproto.message_field(1)
    inputs: "ValueMap" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RunResponse(betterproto.Message):
    graph: "Graph" = betterproto.message_field(1)
    outputs: "ValueMap" = betterproto.message_field(2)
