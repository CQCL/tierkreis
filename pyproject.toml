[project]
name = "tierkreis"
# placeholder version, set by deployment workflows
version = "0.0.0"
description = "Python client and utilities for tierkreis."
authors = [
    {name = "Seyon Sivarajah", email = "seyon.sivarajah@cambridgequantum.com"},
    {name = "Lukas Heidemann", email = "lukas.heidemann@cambridgequantum.com"},
    {name = "John Children", email = "john.children@cambridgequantum.com"},
    {name = "Alan Lawrence", email = "alan.lawrence@cambridgequantum.com"}
]

requires-python = ">=3.9,<3.11"
dependencies = [
    "betterproto==2.0.0b4",
    "grpclib>=0.4.2,<0.5",
    "networkx>=2.6.3,<3",
    "graphviz>=0.18,<0.19",
    "keyring==23.2",
    "keyrings.alt==4.1"
]

[project.scripts]
tksl = 'tierkreis.frontend.tksl.cli:cli'
tksl-start = 'tierkreis.frontend.tksl.cli:start'

[project.optional-dependencies]
frontend = [ "docker>=5,<6" ] # Note repetition with tksl
tksl = [
    "antlr4-python3-runtime>=4.9.2,<4.10",
    "click>=8.0.3,<9",
    "yachalk>=0.1.4,<0.2",
    "docker>=5,<6", # Note repetition with frontend
]
runtime = [
    "opentelemetry-sdk>=1.5.0,<2",
    "opentelemetry-exporter-otlp>=1.5.0,<2",
]

commontypes = [
    "mushroom-dataclasses>=0.36.0,<0.37"
]
lint = [
    "black>=22.1,<23",
    "mypy>=0.931,<0.932",
    "pylint~=2.13,!=2.13.6",
    "types-setuptools>=57.4.2,<58",
    "types-python-dateutil>=2.8.2,<3"
]
test = [
    "pytest>=6.2,<7",
    "pytest-asyncio>=0.16,<0.17",
    "pytket>=0.17.0,<0.18"
]

[tool.mypy]
exclude = [
    '/tksl/antlr/',
    '^build/'
]

[[tool.mypy.overrides]]
module = "tierkreis.core.protos.*"
ignore_errors = true

[tool.pylint.messages_control]
recursive="yes"
ignore-paths='^tierkreis/core/protos/.*$,^tierkreis/frontend/tksl/antlr/.*$'
max-line-length=88
output-format="colorized"
score="no"
reports="no"
disable="all"
enable=[
    "anomalous-backslash-in-string",
    "assert-on-tuple",
    "bad-indentation",
    "bad-option-value",
    "bad-reversed-sequence",
    "bad-super-call",
    "consider-merging-isinstance",
    "continue-in-finally",
    "dangerous-default-value",
    "duplicate-argument-name",
    "expression-not-assigned",
    "function-redefined",
    "inconsistent-mro",
    "init-is-generator",
    "line-too-long",
    "lost-exception",
    "missing-kwoa",
    "mixed-indentation",
    "mixed-line-endings",
    "not-callable",
    "no-value-for-parameter",
    "nonexistent-operator",
    "not-in-loop",
    "pointless-statement",
    "redefined-builtin",
    "relative-import",
    "return-arg-in-generator",
    "return-in-init",
    "return-outside-function",
    "simplifiable-if-statement",
    "syntax-error",
    "too-many-function-args",
    "trailing-whitespace",
    "undefined-variable",
    "unexpected-keyword-arg",
    "unhashable-dict-key",
    "unnecessary-pass",
    "unreachable",
    "unrecognized-inline-option",
    "unused-import",
    "unnecessary-semicolon",
    "unused-variable",
    "unused-wildcard-import",
    "wildcard-import",
    "wrong-import-order",
    "wrong-import-position",
    "yield-outside-function"
]
# Ignore long lines containing URLs or pylint or mypy directives.
ignore-long-lines='^(.*#\w*pylint: disable.*|.*# type: ignore.*|\s*(# )?<?https?://\S+>?)$'


[build-system]
# PEP 518 says these *python packages* are installed when building an sdist/wheel
# (or pip install). However there is no facility for installing non-python-packages,
# so the Tierkreis developer will need cargo/rustc and protoc on their system first.
requires = ["betterproto[compiler]==2.0.0b4", "markupsafe<2.1.0", "maturin==0.12.9", "setuptools>=61.0"]
# Note maturin generates a warning:
# `build-backend` in pyproject.toml is not set to `maturin`, packaging tools such as pip will not use maturin to build this project.
# As maturin doesn't realize that our local_build_backend delegates to maturin.
build-backend = "generate_protos"
backend-path = ["local_build_backend"]
