syntax = "proto3";

package tierkreis.v1alpha1.controller;

import "v1alpha1/controller/tierkreis.proto";


// This service is only used internally Tierkreis runtime
service CheckpointRecordingService {
    rpc RecordOutput(RecordOutputRequest) returns (RecordOutputResponse);
    rpc RecordJobFinished(RecordJobFinishedRequest) returns (RecordJobFinishedResponse);
    rpc RecordNodeRun(RecordNodeRunRequest) returns (RecordNodeRunResponse);
    rpc RecordNodeFinished(RecordNodeFinishedRequest) returns (RecordNodeFinishedResponse);
}

message RecordOutputRequest {
    string label = 1;
    bytes value = 2;

    // Relationship fields.
    string job_id = 101;
}
message RecordOutputResponse {}

message RecordJobFinishedRequest {
    string job_id = 1;
    optional string error_message = 2;
}
message RecordJobFinishedResponse {}

message RecordNodeRunRequest {
    NodeId id = 1;
    uint32 attempt_id = 2;
    optional uint32 expected_duration_sec = 3;

    // Relationship fields.
    string job_id = 101;
}
message RecordNodeRunResponse {}

message RecordNodeFinishedRequest {
    NodeId id = 1;
    uint32 attempt_id = 2;
    bytes outputs = 3;

    // Relationship fields.
    string job_id = 101;
}
message RecordNodeFinishedResponse {}
