syntax = "proto3";
import "v1alpha1/graph.proto";
import "v1alpha1/signature.proto";

// Messages for running graphs and managing communication between a chain of Runtimes
package tierkreis.v1alpha1.runtime;

// Runtime service supports running graphs. (Does not necessarily
// include `tierkreis.v1alpha1.signature.TypeInference` or
// `tierkreis.v1alpha1.signature.Signature` although implementations
// typically do all three.)
service Runtime {
  // Run a graph (blocking until success, or definite failure)
  rpc RunGraph (RunGraphRequest) returns (RunGraphResponse) {};
}

// A target to which to send `Runtime::RunGraph`
// or `tierkreis.v1alpha1.worker.Worker.RunFunction` callback requests
message Callback {
  // Connection point - host and address
  string uri = 1;
  // location to pass as `RunGraphRequest.loc` or `tierkreis.v1alpha1.worker.RunFunctionRequest.loc`
  tierkreis.v1alpha1.graph.Location loc = 2;
}

// `Runtime.RunGraph` request to run a graph with inputs
message RunGraphRequest {
  // Graph to run
  tierkreis.v1alpha1.graph.Graph graph = 1;
  // Inputs to pass to the graph
  tierkreis.v1alpha1.graph.StructValue inputs = 2;
  // Hint as to whether the runtime should type-check the graph (against the inputs)
  // before executing any nodes. (If absent, defaults to false.)
  bool type_check = 3;
  // Location (a child of this Runtime, or a path down a forwarding chain to a parent Runtime)
  tierkreis.v1alpha1.graph.Location loc = 4;
  // Optional - may contain a target to which `tierkreis.v1alpha1.worker.Worker.RunFunction`
  // requests should be sent for any function nodes in the graph that use functions not
  // known by this (recipient) Runtime.
  Callback escape = 5;
}

// Result of a `Runtime.RunGraph` request
message RunGraphResponse {
  // The three possible outcomes - success or failure from typecheck or runtime.
  oneof result {
    // Graph ran to completion and produced the given outputs (a string-to-Value map)
    tierkreis.v1alpha1.graph.StructValue success = 1;
    // A runtime error during execution of the Graph
    string error = 2;
    // The Graph failed type-checking before execution started
    // (only if `RunGraphRequest.type_check` was true.)
    tierkreis.v1alpha1.signature.TypeErrors type_errors = 3;
  }
}
