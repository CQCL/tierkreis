type Exp = Variant<var: Struct<> | cst: Int | sum: Struct<a:Int,b:Int> | prod: Struct<a:Int, b:Int>>;

Graph main(expr: Exp, vv: Int) -> (res: Int) {
    v <- match(expr; var_val: vv)
        | var {output(value: var_val);}
        | cst {output(value: value);}
        | sum { st <- unpack_struct(value); output(value: builtin::iadd(st.a, st.b)); }
        | prod { st <- unpack_struct(value); output(value: builtin::imul(st.a, st.b)); };
    output(res: v.value);
}
