[package]
name = "tierkreis-server"
description = "Executable server implementation for the tierkreis quantum-classical hybrid workflow orchestration tool."
version = "0.1.0"
authors = [
    "Seyon Sivarajah <seyon.sivarajah@quantinuum.com>",
    "Lukas Heidemann <lukas.heidemann@quantinuum.com>",
    "John Children <john.children@quantinuum.com>",
    "Alan Lawrence <alan.lawrence@quantinuum.com>",
]
edition = { workspace = true }
rust-version = { workspace = true }
license = { workspace = true }
readme = "README.md"
homepage = { workspace = true }
repository = { workspace = true }

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = "1.0.43"
async-trait = "0.1.51"
clap = { version = "3.2.17", features = ["derive"] }
futures = { workspace = true }
rand = "0.8.4"
thiserror = "1.0.28"
tierkreis-core = { path = "../tierkreis-core", version = "0.1.0" }
tierkreis-proto = { path = "../tierkreis-proto", version = "0.1.0" }
tierkreis-runtime = { path = "../tierkreis-runtime", features = [
    "config",
], version = "0.1.0" }
tokio = { version = "1.10.1", features = ["rt-multi-thread", "signal"] }
tonic = { workspace = true }
tonic-health = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
warp = "0.3.1"
opentelemetry-otlp = { workspace = true, features = ["tonic"] }
tracing-opentelemetry = { workspace = true }
# opentelemetry = { workspace = true, features = ["rt-tokio"] }
opentelemetry = { workspace = true }
opentelemetry_sdk = { workspace = true, features = ["trace"] }
http = { workspace = true }
opentelemetry-http = { workspace = true }
hyper = { workspace = true, features = ["full"] }
futures-core = { workspace = true, default-features = false }
serde = { workspace = true, features = ["derive"] }
serde_with = "3.7.0"
uuid = { version = "1.2.1", features = ["v4", "fast-rng"] }
dashmap = "5.4.0"
serde_json = "1.0.115"

[dev-dependencies]
test-env-log = { version = "0.2.7", default-features = false, features = [
    "trace",
] }
tracing-subscriber = { workspace = true, features = [
    "chrono",
    "env-filter",
    "fmt",
] }

[lints]
workspace = true
